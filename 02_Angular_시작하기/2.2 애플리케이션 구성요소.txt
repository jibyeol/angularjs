2.2.1 모듈(Module)
모듈은 관련 컴포넌트나 서비스, 디렉티브 등을 편하게 사용하기 위해 하나로 모은 것이다.

모듈 클래스에 @NgModule 어노테이션을 붙여서 지정하고, 이 안에서 모듈 내용을 설정한다.
@NgModule({
    imports : [BrowserModule], // 브라우저를 사용하는 모든 앱은 BrowserModule을 불러와야 한다.
    declarations : [HelloWorldComponent], // AppModule(루트모듈)에 HelloWorldComponent를 선언한다.
    bootstrap : [HelloWorldComponent] // 애플리케이션을 실행하면 bootstrap으로 지정된 HelloWorldComponent가 루트 컴포넌트로 렌더링된다.
})
export class AppModule {}

platformBrowserDynamic().bootstrapModule(AppModule)
// 애플리케이션 실행


2.2.2 컴포넌트(Component)
애플리케이션을 구성하는 기본 요소.
뷰와 컴포넌트 동작을 정의하는 클래스로 구성

bootstrap으로 지정된 컴포넌트가 루트 컴포넌트이고, 다른 컴포넌트랑 특별히 다른것이 없다.

@Component({ // selector, template(또는 templateUrl)는 필수요소
    selector : 'hello-world',
    template : '<h1>Hello {{name}}!</h1>'
})
class HelloWorldComponent {
    name : string;

    constructor(){
        this.name = 'Angular';
    }
}


2.2.3 디렉티브(Directive)

@Directive({
    selector : 'input[log-directive]'.
    host : {
        '(input)' : 'onInput($event)'
    }
})
class LogDirective {
    onInput(event){
        console.log(event.target.value);
    }
}

input 엘리먼트 값이 변경될 떄 브라우저 콘솔에 값을 출력하는 예제이다.
이벤트를 핸들러 함수와 연결하려면 이벤트 명을 괄호로 감싸면 된다.
host는 디렉티브가 적용되는 엘리먼트를 뜻한다.

<input type="text" log-directive/>

이렇게 적용한다.

import {Directive, ElementRef, Renderer} from '@angular/core';

@Directive({
    selector : '[highlight]'
})
export class HightlightDirective{
    constructor(renderer : Renderer, el : ElementRef){
        renderer.setElementStyle(el.nativeElement, 'backgroundColor', 'blue');
    }
}

<h1 hightlihgt>하이라이트 적용</h1>

모듈에서 사용되는 모든 디렉티브는 @NgModule 어노테이션의 declarations 프로퍼티에 추가되어야 한다.

@NgModule({
    imports : [BrowserModule],
    declarations : [HelloWorldComponent, HightlightDirective],
    bootstrap : [HelloWorldComponent]
})


2.2.4 데이터 바인딩 기초

프로퍼티값 표시하려면 이중괄호 사용 {{}}
<h1>Hello {{name}}</h1>

HTML 엘리먼트 값을 컴포넌트 프로퍼티로 바인딩하려면 대괄호 사용 []
<span [hidden]="isValid">The field is required</span>

발생한 이베트 핸들러를 연결하려면 괄호를 사용한다. ()
<button (click)="placeBid()">Place Bid</button>

다른 엘리먼트의 프로퍼티를 참조할 때 #으로 시작하는 지역변수를 사용할 수 있다.
<input #title type="text" />
<span>{{title.value}}</span>