Angular 애플리케이션은 부모-자식 관계로 구성된 컴포넌트의 집합이다.
각 컴포넌트는 캡슐화되서 원하는 동작은 컴포넌트 안에서 구현할 수 있고, 외부에 노출되지 않게 보호할 수 있다.
부모 컴포넌트의 스타일에 영향을 받지 않게 독립적으로 스타일을 지정할 수도 있다.
부모 컴포넌트와 상관없이 독자적인 의존성을 주입 받을 수 있다.
밖에서 이뤄지는 라우팅과 별개로 자식 컴포넌트에 대한 라우터를 설정할 수 있다.

[딥링킹 (Deep linking)]
웹 페이지의 특정 내용으로 접근하는 링크를 만드는 것
http://127.0.0.1:8080/#/product/1234/seller/5678
ID가 1234인 상품을 판매하는 판매자 중 ID가 5678인 판매자에 대한 정보를 표시하는 페이지를 뜻한다.
이 uRL을 바로 접근하면 해당 정보를 바로 확인할 수 있다.

[Angular가 지원하는 Shadow DOM]
Shadow DOM은 HTML 문서에 포함되어 렌더링되지만, HTML문서에 해당되는 전역 DOM에서 Shadow DOM 내부의 엘리먼트를 접근할 수 없다.
별개의 컴포넌트로 관리한다.
CSS 스타일이 전역 DOM CSS에 영향을 주지 않는다.

ViewEncapsulation.Emulated : Angular가 제공하는 방식으로 Shadow DOM을 캠슐화한다.
ViewEncapsulation.Native : 브라우저에서 제공하는 Shadow DOM을 사용한다. 브라우저에서 Shadow DOM을 지원하는 것이 확실할 때만 사용해야 한다.
ViewEncapsulation.None : Shadow DOM 캠슐화를 사용하지 않고, 모든 style을 전역 웹 페이지 DOM에 포함시킨다.