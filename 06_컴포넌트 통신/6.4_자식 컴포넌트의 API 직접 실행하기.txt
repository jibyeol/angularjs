부모 -> 자식 -- 데이터 전달시
입력 프로퍼티 바인딩
부모에서 자식 함수를 직접 실행

----------------------
<child #child1></child>
<child #child2></child>
----------------------

부모 컴포넌트에 @ViewChild 어노테이션을 설정해서 변수를 선언
1. ----------------------
@ViewChild('child1')
firstChild : ChildComponent;
...
this.firstChild.greet('Child1');
----------------------
위 코드는 child1이라는 템플릿 변수를 갖는 컴포넌트를 찾아서 firstChild란느 변수로 할당
자식 컴포넌트의 함수를 직접 실행

2. ----------------------
<button (click)="child2.greet('Child2')">자식2에서 greet() 실행</button>
----------------------
위 코드는 컴포넌트 코드를 사용하지 않고, 부모 템플릿에서 접근하는 방법이다.

생명주기를 가로채는 함수에서 UI 갱신하기
1번의 방법에서 부모 컴포넌트에서 gnAfterViewInit()함수에서 자식 컴포넌트의 함수를 호출하고 있다.
greet()에서 화면을 변경하지 않으면 상관없지만 ngAfterViewInit() 함수가 실행되기 전에 화면을 변경하려고 하면 에러가 발생한다.
ngAfterViewInit() 함수가 끝난 이후에 화면이 렌더링되기 때문이다.
Angular가 바인딩 검사를 추가로하지 않는 운영모드에서 실행하거나, setTimeout 함수를 이용해서 다음 이벤트 루프에서 화면을 갱신한다.